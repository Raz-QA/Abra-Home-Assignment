{
  "_from": "@stdlib/utils-define-nonenumerable-read-write-accessor@^0.0.x",
  "_id": "@stdlib/utils-define-nonenumerable-read-write-accessor@0.0.7",
  "_inBundle": false,
  "_integrity": "sha512-3lZ33tAF+SPdhY8hiEBQ12w3zfukc6v44thiTBwFbhRM/bL7EWBxzUKDNcoOoqm4YXJ6afs2PzN3Mn4HkIjexg==",
  "_location": "/@stdlib/utils-define-nonenumerable-read-write-accessor",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "@stdlib/utils-define-nonenumerable-read-write-accessor@^0.0.x",
    "name": "@stdlib/utils-define-nonenumerable-read-write-accessor",
    "escapedName": "@stdlib%2futils-define-nonenumerable-read-write-accessor",
    "scope": "@stdlib",
    "rawSpec": "^0.0.x",
    "saveSpec": null,
    "fetchSpec": "^0.0.x"
  },
  "_requiredBy": [
    "/@stdlib/random-base-arcsine",
    "/@stdlib/random-base-bernoulli",
    "/@stdlib/random-base-beta",
    "/@stdlib/random-base-betaprime",
    "/@stdlib/random-base-binomial",
    "/@stdlib/random-base-box-muller",
    "/@stdlib/random-base-cauchy",
    "/@stdlib/random-base-chi",
    "/@stdlib/random-base-chisquare",
    "/@stdlib/random-base-cosine",
    "/@stdlib/random-base-discrete-uniform",
    "/@stdlib/random-base-erlang",
    "/@stdlib/random-base-exponential",
    "/@stdlib/random-base-f",
    "/@stdlib/random-base-frechet",
    "/@stdlib/random-base-gamma",
    "/@stdlib/random-base-geometric",
    "/@stdlib/random-base-gumbel",
    "/@stdlib/random-base-hypergeometric",
    "/@stdlib/random-base-improved-ziggurat",
    "/@stdlib/random-base-invgamma",
    "/@stdlib/random-base-kumaraswamy",
    "/@stdlib/random-base-laplace",
    "/@stdlib/random-base-levy",
    "/@stdlib/random-base-logistic",
    "/@stdlib/random-base-lognormal",
    "/@stdlib/random-base-minstd",
    "/@stdlib/random-base-minstd-shuffle",
    "/@stdlib/random-base-mt19937",
    "/@stdlib/random-base-negative-binomial",
    "/@stdlib/random-base-normal",
    "/@stdlib/random-base-pareto-type1",
    "/@stdlib/random-base-poisson",
    "/@stdlib/random-base-randi",
    "/@stdlib/random-base-randn",
    "/@stdlib/random-base-randu",
    "/@stdlib/random-base-rayleigh",
    "/@stdlib/random-base-t",
    "/@stdlib/random-base-triangular",
    "/@stdlib/random-base-uniform",
    "/@stdlib/random-base-weibull"
  ],
  "_resolved": "https://registry.npmjs.org/@stdlib/utils-define-nonenumerable-read-write-accessor/-/utils-define-nonenumerable-read-write-accessor-0.0.7.tgz",
  "_shasum": "a0e7b3dadde910387d503ba6790295e886b6e20d",
  "_spec": "@stdlib/utils-define-nonenumerable-read-write-accessor@^0.0.x",
  "_where": "C:\\Users\\albrz\\Desktop\\Abra Home Assignment\\node_modules\\@stdlib\\random-base-randu",
  "author": {
    "name": "The Stdlib Authors",
    "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
  },
  "bugs": {
    "url": "https://github.com/stdlib-js/stdlib/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "The Stdlib Authors",
      "url": "https://github.com/stdlib-js/stdlib/graphs/contributors"
    }
  ],
  "dependencies": {
    "@stdlib/types": "^0.0.x",
    "@stdlib/utils-define-property": "^0.0.x"
  },
  "deprecated": false,
  "description": "Define a non-enumerable read-write accessor.",
  "devDependencies": {
    "@stdlib/assert-is-string": "^0.0.x",
    "@stdlib/bench": "^0.0.x",
    "@stdlib/utils-keys": "^0.0.x",
    "istanbul": "^0.4.1",
    "tap-spec": "5.x.x",
    "tape": "git+https://github.com/kgryte/tape.git#fix/globby"
  },
  "directories": {
    "benchmark": "./benchmark",
    "doc": "./docs",
    "example": "./examples",
    "lib": "./lib",
    "test": "./test"
  },
  "engines": {
    "node": ">=0.10.0",
    "npm": ">2.7.0"
  },
  "funding": {
    "type": "patreon",
    "url": "https://www.patreon.com/athan"
  },
  "homepage": "https://stdlib.io",
  "keywords": [
    "stdlib",
    "stdutils",
    "stdutil",
    "utilities",
    "utility",
    "utils",
    "util",
    "object",
    "property",
    "define",
    "prop",
    "read-write",
    "read",
    "write",
    "readable",
    "writable",
    "configurable",
    "accessor",
    "get",
    "getter",
    "set",
    "setter",
    "non-enumerable",
    "hidden",
    "private"
  ],
  "license": "Apache-2.0",
  "main": "./lib",
  "name": "@stdlib/utils-define-nonenumerable-read-write-accessor",
  "os": [
    "aix",
    "darwin",
    "freebsd",
    "linux",
    "macos",
    "openbsd",
    "sunos",
    "win32",
    "windows"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/stdlib-js/utils-define-nonenumerable-read-write-accessor.git"
  },
  "scripts": {
    "benchmark": "make benchmark",
    "examples": "make examples",
    "test": "make test",
    "test-cov": "make test-cov"
  },
  "types": "./docs/types",
  "version": "0.0.7"
}
